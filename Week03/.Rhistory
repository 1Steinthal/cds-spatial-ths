tm_compass(position = c("RIGHT", "top"), #Task 4
type = "rose",
size = 2) +
tm_credits(text = "Th. Steinthal, 2024") + #Task 2
tm_layout(main.title = "My wonderful map", #Task 1
bg.color = "orange",
inner.margins = c(0, 0, 0, 0))
# /Start Code/
tm_shape(elevation)  +
tm_raster(title = "elev [masl]",
style = "cont",
palette = "-RdYlG") + #Task 3
tm_shape(counties) +
tm_borders(col = "red",
lwd = 3) +
tm_scale_bar(breaks = c(0, 100, 200),
text.size = 1) +
tm_compass(position = c("RIGHT", "top"), #Task 4
type = "rose",
size = 2) +
tm_credits(text = "Th. Steinthal, 2024") + #Task 2
tm_layout(main.title = "My wonderful map", #Task 1
bg.color = "orange",
inner.margins = c(0, 0, 0, 0))
# /Start Code/
tm_shape(elevation)  +
tm_raster(title = "elev [masl]",
style = "cont",
palette = "-RdYlGn") + #Task 3
tm_shape(counties) +
tm_borders(col = "red",
lwd = 3) +
tm_scale_bar(breaks = c(0, 100, 200),
text.size = 1) +
tm_compass(position = c("RIGHT", "top"), #Task 4
type = "rose",
size = 2) +
tm_credits(text = "Th. Steinthal, 2024") + #Task 2
tm_layout(main.title = "My wonderful map", #Task 1
bg.color = "orange",
inner.margins = c(0, 0, 0, 0))
# /End Code/
# /Start Code/
tm_shape(elevation)  +
tm_raster(title = "elev [masl]", #Task 5
style = "cont",
palette = "-RdYlGn") + #Task 3
tm_shape(counties) +
tm_borders(col = "red",
lwd = 3) +
tm_scale_bar(breaks = c(0, 50, 100, 150, 200),
text.size = 1,
position = c("RIGHT", "top") +
tm_compass(position = c("RIGHT", "top"), #Task 4
type = "rose",
size = 2) +
tm_credits(text = "Th. Steinthal, 2024") + #Task 2
tm_layout(main.title = "My wonderful map", #Task 1
bg.color = "orange",
inner.margins = c(0, 0, 0, 0))
# /End Code/
# /Start Code/
tm_shape(elevation)  +
tm_raster(title = "elev [masl]", #Task 5
style = "cont",
palette = "-RdYlGn") + #Task 3
tm_shape(counties) +
tm_borders(col = "red",
lwd = 3) +
tm_scale_bar(breaks = c(0, 50, 100, 150, 200),
text.size = 1,
position = c("RIGHT", "top")) +
tm_compass(position = c("RIGHT", "top"), #Task 4
type = "rose",
size = 2) +
tm_credits(text = "Th. Steinthal, 2024") + #Task 2
tm_layout(main.title = "My wonderful map", #Task 1
bg.color = "orange",
inner.margins = c(0, 0, 0, 0))
# /End Code/
# /Start Code/
tm_shape(elevation)  +
tm_raster(title = "elev [masl]", #Task 5
style = "cont",
palette = "-RdYlGn") + #Task 3
tm_shape(counties) +
tm_borders(col = "red",
lwd = 3) +
tm_scale_bar(breaks = c(0, 50, 100, 150, 200), #Task 6
text.size = 1,
position = c("RIGHT", "top")
size = 1)+
# /Start Code/
tm_shape(elevation)  +
tm_raster(title = "elev [masl]", #Task 5
style = "cont",
palette = "-RdYlGn") + #Task 3
tm_shape(counties) +
tm_borders(col = "red",
lwd = 3) +
tm_scale_bar(breaks = c(0, 50, 100, 150, 200), #Task 6
text.size = 1,
position = c("RIGHT", "top"),
size = 1)+
tm_compass(position = c("RIGHT", "top"), #Task 4
type = "rose",
size = 1) +
tm_credits(text = "Th. Steinthal, 2024") + #Task 2
tm_layout(main.title = "My wonderful map", #Task 1
bg.color = "orange",
inner.margins = c(0, 0, 0, 0))
# /End Code/
# /Start Code/
tm_shape(elevation)  +
tm_raster(title = "elev [masl]", #Task 5
style = "cont",
palette = "-RdYlGn") + #Task 3
tm_shape(counties) +
tm_borders(col = "red",
lwd = 3) +
tm_compass(position = c("RIGHT", "top"), #Task 4
type = "rose",
size = 1) +
tm_scale_bar(breaks = c(0, 50, 100, 150, 200), #Task 6
text.size = 1,
position = c("RIGHT", "top"),
size = 1)+
tm_credits(text = "Th. Steinthal, 2024") + #Task 2
tm_layout(main.title = "My wonderful map", #Task 1
bg.color = "orange",
inner.margins = c(0, 0, 0, 0))
# /End Code/
# /Start Code/
tm_shape(elevation)  +
tm_raster(title = "elev [masl]", #Task 5
style = "cont",
palette = "-RdYlGn") + #Task 3
tm_shape(counties) +
tm_borders(col = "black",
lwd = 1) +
tm_compass(position = c("RIGHT", "top"), #Task 4
type = "rose",
size = 1) +
tm_scale_bar(breaks = c(0, 50, 100, 150, 200), #Task 6
text.size = 1,
position = c("RIGHT", "top"),
size = 1)+
tm_credits(text = "Th. Steinthal, 2024") + #Task 2
tm_layout(main.title = "My wonderful map", #Task 1
bg.color = "white",
inner.margins = c(0, 0, 0, 0))
# /End Code/
# /Start Code/
tm_shape(elevation)  +
tm_raster(title = "elev [masl]", #Task 5
style = "cont",
palette = "-RdYlGn") + #Task 3
tm_shape(counties) +
tm_borders(col = "black",
lwd = 1) +
tm_compass(position = c("RIGHT", "bottom"), #Task 4
type = "rose",
size = 1) +
tm_scale_bar(breaks = c(0, 50, 100, 150, 200), #Task 6
text.size = 1,
position = c("RIGHT", "top"),
size = 1)+
tm_credits(text = "Th. Steinthal, 2024") + #Task 2
tm_layout(main.title = "My wonderful map", #Task 1
bg.color = "white",
inner.margins = c(0, 0, 0, 0))
# /End Code/
# /Start Code/
tm_shape(elevation)  +
tm_raster(title = "elev [masl]", #Task 5
style = "cont",
palette = "-RdYlGn") + #Task 3
tm_shape(counties) +
tm_borders(col = "black", #Task 7
lwd = 1) +
tm_compass(position = c("LEFT", "bottom"), #Task 4
type = "rose",
size = 1) +
tm_scale_bar(breaks = c(0, 50, 100, 150, 200), #Task 6
text.size = 1,
position = c("RIGHT", "top"),
size = 1)+
tm_credits(text = "Th. Steinthal, 2024") + #Task 2
tm_layout(main.title = "My wonderful map", #Task 1
bg.color = "white",#Task 8
inner.margins = c(0, 0, 0, 0))
# /End Code/
# Load your DK places googlesheet from W01
gs4_deauth() # if the Gdrive authentication is not working for you
places <- read_sheet("https://docs.google.com/spreadsheets/d/1PlxsPElZML8LZKyXbqdAYeQCDIvDps2McZx1cTVWSzI/edit#gid=1817942479",
range = "SA2024",
col_types = "cccnncnc")
# Load the first 5000 rows in .csv-file and save it as "nitrates":
nitrates <- read_csv("../data/nitrate.csv") %>%
slice(1:5000)
View(places)
places_sf <- places %>%
filter(!is.na("Placename")) %>%
st_as_sf(coords = places_sf("Latitude","Longitude"))
places_sf <- places %>%
filter(!is.na("Placename")) %>%
st_as_sf(coords = c("Latitude","Longitude"))
places_sf <- places %>%
filter(!is.na("Latitude")) %>%
st_as_sf(coords = c("Latitude","Longitude"))
places_sf <- places %>%
filter(!is.na("Latitude"))
View(places_sf)
library(tidyverse)
places_sf <- places %>%
filter(!is.na("Latitude"))
places_sf <- places %>%
filter(!is.na(Latitude))
View(places_sf)
places_sf <- places %>%
filter(!is.na(Latitude)) %>%
st_as_sf(coords = c("Latitude","Longitude"))
View(places_sf)
crs(places_sf)
# Load the first 5000 rows in .csv-file and save it as "nitrates":
nitrates <- read_csv("../data/nitrate.csv") %>%
slice(1:5000)
places_sf <- places %>%
filter(!is.na(Latitude)) %>%
st_as_sf(coords = c("Latitude","Longitude"))
View(nitrates)
nitrates_sf <- st_as_sf(nitrates, wkt = WKT)
nitrates_sf <- st_as_sf(nitrates, wkt = "WKT")
View(nitrates_sf)
plot(places_sf$geometry)
plot(nitrates_sf$WKT)`
plot(nitrates_sf$WKT)
View(nitrates)
View(nitrates_sf)
View(elevation)
elevation
places4326 <- places_sf %>% st_set_crs(4326)
nitrates25832 <- nitrates_sf %>% st_set_crs(25832)
places4326
nitrates25832
# /Start Code / #
the_crs <- crs(places4326, asText = TRUE)
nitrates4326
# /Start Code / #
places4326 <- places_sf %>% st_set_crs(4326)
nitrates25832 <- nitrates_sf %>% st_set_crs(25832)
places4326
nitrates25832
# /End Code/ #
# /Start Code / #
the_crs <- crs(places4326, asText = TRUE)
# /Start Code / #
the_crs <- crs(places4326)
nitrates4326 <- project_Raster(nitrates25832, crs = the_crs, method = "ngs")
nitrates4326 <- projectRaster(nitrates25832, crs = the_crs, method = "ngs")
nitrates4326 <- st_transform(nitrates25832, crs = the_crs)
nitrates4326
places4326
elevation
places4326
# Do you see the playgrounds?
plotRGB(elevation, stretch = "lin")
plot(elevation, stretch = "lin")
plot(nitrates4326, add = TRUE)
tm_shape(elevation)  +
tm_raster(title = "elev [masl]", #Task 5
style = "cont",
palette = "-RdYlGn") + #Task 3
tm_bubbles(nitrates4326) +
tm_compass(position = c("LEFT", "bottom"), #Task 4
type = "rose",
size = 1) +
tm_scale_bar(breaks = c(0, 50, 100, 150, 200), #Task 6
text.size = 1,
position = c("RIGHT", "top"),
size = 1)+
tm_credits(text = "Th. Steinthal, 2024") + #Task 2
tm_layout(main.title = "My wonderful map", #Task 1
bg.color = "white",#Task 8
inner.margins = c(0, 0, 0, 0))
# /Start Code / #
the_crs <- crs(nitrates25832)
places25832 <- st_transform(places_sf, crs = the_crs)
places25832 <- projectRaster(places_sf, crs = the_crs)
places25832 <- projectRaster(places_sf, crs = the_crs, method = "ngb")
# /Start Code / #
the_crs <- crs(places4326)
nitrates4326 <- st_transform(nitrates25832, crs = the_crs)
# /Start Code / #
the_crs <- crs(places4326)
nitrates4326 <- st_transform(nitrates25832, crs = the_crs)
#All match!
nitrates4326
places4326
elevation
# Do you see the playgrounds?
# /End Code/ #
#All match!
nitrates4326
places4326
elevation
plot(nitrates4326)
View(nitrates4326)
plot(nitrates4326)
plot(elevation, add = T)
#
# tm_shape(elevation)  +
#   tm_raster(title = "elev [masl]", #Task 5
#             style = "cont",
#             palette = "-RdYlGn") + #Task 3
#   tm_bubbles(nitrates4326) +
#   tm_compass(position = c("LEFT", "bottom"), #Task 4
#              type = "rose",
#              size = 1) +
#   tm_scale_bar(breaks = c(0, 50, 100, 150, 200), #Task 6
#              text.size = 1,
#              position = c("RIGHT", "top"),
#              size = 1)+
#   tm_credits(text = "Th. Steinthal, 2024") + #Task 2
#   tm_layout(main.title = "My wonderful map", #Task 1
#             bg.color = "white",#Task 8
#             inner.margins = c(0, 0, 0, 0))
plot(elevation)
plot(elevation)
plot(nitrates4326, add = T)
#plot(elevation)
#plot(nitrates4326, add = T)
#
tm_shape(elevation)  +
tm_raster(title = "elev [masl]", #Task 5
style = "cont",
palette = "-RdYlGn") + #Task 3
tm_bubbles(nitrates4326)
#plot(elevation)
#plot(nitrates4326, add = T)
#
tm_shape(elevation)  +
tm_raster(title = "elev [masl]", #Task 5
style = "cont",
palette = "-RdYlGn") + #Task 3
tm_dots(nitrates4326)
#plot(elevation)
#plot(nitrates4326, add = T)
#
tm_shape(elevation) + #Task 3
tm_dots(nitrates4326)
#plot(elevation)
#plot(nitrates4326, add = T)
#
base_map <- tm_shape(elevation) + tm_raster()
#plot(elevation)
#plot(nitrates4326, add = T)
#
base_map <- tm_shape(elevation) + tm_raster()
base_map +
tm_shape(nitrates4326)+
tm_dots(size = 0.2)
getData('ISO3')
# /Start Code/ #
municipalities <- getData("GADM", country = "AFG", level = 2)
# /Start Code/ #
municipalities <- getData("GADM", country = "AFG", level = 2)
AFG_border <- getData("GADM", country = "AFG", level = 0)
plot(municipalities);plot(AFG_border, add=T)
crs(AFG_border)
AFG_border32632 <- st_transform(st_crs(32632))
AFG_border32632 <- AFG_border %>% st_crs(32632)
municipalities32632 <- AFG_border %>% st_crs(32632)
municipalities32632 <- municipalities %>% st_crs(32632)
# /Start Code/ #
elevation <- getData("alt", country = "AFG", mask = T)
plot(elevation);plot(municipalities, add=T);plot(AFG_border, add=T)
AFG_border32632 <- AFG_border %>% st_crs(1024)
municipalities32632 <- municipalities %>% st_crs(1024)
elevation <- elevation %>% st_crs(1024)
plot(elevation);plot(municipalities, add=T);plot(AFG_border, add=T)
elevation <- elevation %>% st_crs(1024)
AFG_border32632 <- AFG_border %>% st_crs(1024)
municipalities32632 <- municipalities %>% st_crs(1024)
plot(elevation);plot(municipalities, add=T);plot(AFG_border, add=T)
plot(municipalities);plot(AFG_border, add=T)
# /Start Code/ #
elevation <- getData("alt", country = "AFG", mask = T)
# /End Code/ #
```
plot(municipalities);plot(AFG_border, add=T)
plot(elevation);plot(municipalities, add=T);plot(AFG_border, add=T)
elevation
municipalities
AFG_border
library(knitr)
library(rmdformats)
## Global options
options(max.print="75")
opts_chunk$set(echo=TRUE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_knit$set(width=75)
library(sf)
library(raster)
# Create dataframe with lat long data
df <- data.frame(place = c("Aarhus Domkirke",
"Christianskirken",
"Nobelparken"),
longitude=c(10.2102364,10.1949197,10.2033485),
latitude=c(56.1574919,56.1772228,56.174346))
# Create dataframe with lat long data
df <- data.frame(place = c("Aarhus Domkirke",
"Christianskirken",
"Nobelparken"),
longitude=c(10.2102364,10.1949197,10.2033485),
latitude=c(56.1574919,56.1772228,56.174346))
shelters <- read_csv("../data/shelters.json")
aarhus <- brick("../data/Aarhus_1m.TIF")
View(df)
# Convert the data frame to an sf object
df_sf <- st_as_sf(df, coords = c("longitude", "latitude"))
# Transform the points to match the shelters' CRS EPSG 25832
df_crs <- st_transform(df_sf, crs = 25832)
# Transform the points to match the shelters' CRS EPSG 25832
df_crs <- st_crs(df_sf, crs = 25832)
# Convert the data frame to an sf object
df_sf <- st_as_sf(df, coords = c("longitude", "latitude"), 4326)
# Convert the data frame to an sf object
df_sf <- st_as_sf(df, coords = c("longitude", "latitude"), crs = 4326)
# Transform the points to match the shelters' CRS EPSG 25832
df_crs <- st_transform(df_sf, crs = 25832)
# Buffer the points
df_buf <- st_buffer(df_crs, dist = 500)
shelters_buf <- st_buffer(shelters, dist = 500)
# Load shelters and buffer them by 500m
shelters <- read_csv("../data/shelters.json")
shelters_buf <- st_buffer(shelters, dist = 500)
# Load shelters and buffer them by 500m
shelters <- read_csv("../data/shelters.json")
shelters_buf <- st_buffer(shelters, dist = 500)
View(shelters)
View(shelters)
# Load shelters and buffer them by 500m
shelters <- read_csv("../data/shelters.rds")
View(shelters)
# Load shelters and buffer them by 500m
shelters <- read_csv("../data/shelters.json")
shelters <- shelters %>%
separate_rows(sep = "[^[:alnum:].]+", convert = FALSE)
View(shelters)
shelters <- shelters %>%
separate_rows(sep = "[^[:alnum:].]+")
shelters <- shelters %>%
separate_rows(sep = "[^[:alnum:].]+", delim = ",")
shelters <- shelters %>%
separate_rows(delim = ",")
View(shelters)
shelters %>% mutate("{" = str_split("{", ", ")) %>%
unnest()
install.packages("jsonlite")
install.packages("jsonlite")
library(jsonlite)
# Load shelters and buffer them by 500m
shelters <- fromJSON("../data/shelters.json")
# Load shelters and buffer them by 500m
shelters <- read_json("../data/shelters.json")
# Load shelters and buffer them by 500m
shelters <- read_json("../data/shelters.json")
View(shelters)
# Load shelters and buffer them by 500m
shelters <- fromJSON(read_json("../data/shelters.json"))
# Load shelters and buffer them by 500m
shelters <- read_json("../data/shelters.json"))
# Load shelters and buffer them by 500m
shelters <- read_json("../data/shelters.json")
shelters_buf <- st_buffer(shelters, dist = 500)
# Load shelters and buffer them by 500m
shelters <- fromJSON("../data/shelters.json")
View(shelters)
# Load shelters and buffer them by 500m
shelters <- flatten(read_json("../data/shelters.json"))
# Load shelters and buffer them by 500m
shelters <- flatten(read_json("../data/shelters.json"))
# Load shelters and buffer them by 500m
shelters <- read_json("../data/shelters.json")
# Load shelters and buffer them by 500m
shelters <- fromJSON(read_json("../data/shelters.json"))
# Load shelters and buffer them by 500m
shelters <- fromJSON("../data/shelters.json")
View(shelters)
# Load shelters and buffer them by 500m
shelters <- flatten(read_json("../data/shelters.json"))
# Load shelters and buffer them by 500m
shelters <- flatten(fromJSON("../data/shelters.json"))
# Load shelters and buffer them by 500m
shelters <- flatten(fromJSON("../data/shelters.json"))
# Load shelters and buffer them by 500m
shelters <- flatten(fromJSON("../data/shelters.json"))
# Load shelters and buffer them by 500m
shelters <- fromJSON("../data/shelters.json", flatten=T)
View(shelters)
shelters$features
# Load shelters and buffer them by 500m
shelters <- fromJSON("../data/shelters.json")
View(shelters)
shelters <- shelters$features
shelters_buf <- st_buffer(shelters, dist = 500)
