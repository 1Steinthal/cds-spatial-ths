tally() %>%
arrange(n) %>%
slice(1:5)
least_mun <- municipalities_25832 %>%
filter(NAME_2%in%least$NAME_2)
# Plot the municipalities with fewest Viking finds in red over DK municipalities
plot(st_geometry(municipalities_25832), col = "grey", border = "white")
plot(municipalities_25832[which(st_intersects(least, municipalities_25832, sparse = FALSE)), ]$geometry, col = "red", add = T)
ggplot() +
geom_sf(data = municipalities_25832, fill = NA) +
geom_sf(data = least_mun, col = "red")
# Load objects
parks <- read_sf("../data/parks.shp")
viking
# Create a 10km buffer around Nobelparken (see Week 03 Task 01 for guidance)
nb <- data.frame(place = "Nobelparken", longitude = 10.2033485, latitude = 56.174346)
nb_buf <- nb %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326) %>%
st_transform(crs = 25832) %>%
st_buffer(10000)
# Check consistent projection among the objects
all.equal(st_crs(parks), st_crs(viking), st_crs(nb_buf))
# Identify viking monuments that intersect with the buffer
viking_int <- st_intersects(nb_buf, viking)
# Identify parks contained by the buffer
parks_cont <- st_contains(nb_buf, parks)
# Get the indexes of the viking monuments and parks contained by the buffer. You are extracting the first element of each list.
int <- viking_int[[1]]
cont <- parks_cont[[1]]
# Get the IDs or codes of the viking and parks in buffer
viking$stednavn[int]
parks$navn[cont]
# Clip the viking monuments and parks layers by the buffer (ignore the warning)
viking_clip <- st_intersection(nb_buf, viking)
parks_clip <- st_intersection(nb_buf, parks)
# Plot the geometry of the clipped viking monuments
plot(nb_buf$geometry, border = "blue")
plot(parks[cont,], add = TRUE, col = "yellow")
plot(st_geometry(viking_clip), col = "red", add = TRUE, pch = 19)
plot(nb_buf$geometry, border = "blue")
plot(parks[cont,], add = TRUE, col = "yellow")
plot(st_geometry(viking_clip), col = "red", add = TRUE, pch = 16)
# Create the nobel object and transform to planar CRS
nobel <- st_centroid(nb_buf)
# Test whether the CRS match
st_crs(viking_clip) == st_crs(nobel)
# Compute the distance between the Nobelparken and the clipped viking monuments
viking_clip <- viking_clip %>%
mutate("nb_dist" = unclass(st_distance(viking_clip, nobel)))
#d <- st_distance(viking_clip, nobel)
# Take a quick look at the result
#head(d)
# Find the index of the 10 nearest viking monuments
#sorted <- sort(d) # sort monuments by proximd[ity
#nearest10index <- which ( ) # which distances are smaller than the 10th smallest distance
#nearest10index <- head(sorted,n=10)
# Identify the viking monuments that are the nearest, what kinds of monuments are they?
#viking_clip[1:10,]$anlaegsbet
#viking_clip %>%
#  filter(NAME_2%in%least$NAME_2)
viking_clip_sort <- sort(viking_clip,
viking_clip_sort <-viking_clip[order(viking_clip$nb_dist),]
ten_nearst <- head(viking_clip_sort, 10)
# Create the nobel object and transform to planar CRS
nobel <- st_centroid(nb_buf)
# Test whether the CRS match
st_crs(viking_clip) == st_crs(nobel)
# Compute the distance between the Nobelparken and the clipped viking monuments
viking_clip <- viking_clip %>%
mutate("nb_dist" = unclass(st_distance(viking_clip, nobel)))
#d <- st_distance(viking_clip, nobel)
# Take a quick look at the result
#head(d)
# Find the index of the 10 nearest viking monuments
#sorted <- sort(d) # sort monuments by proximd[ity
#nearest10index <- which ( ) # which distances are smaller than the 10th smallest distance
#nearest10index <- head(sorted,n=10)
# Identify the viking monuments that are the nearest, what kinds of monuments are they?
#viking_clip[1:10,]$anlaegsbet
#viking_clip %>%
#  filter(NAME_2%in%least$NAME_2)
viking_clip_sort <-viking_clip[order(viking_clip$nb_dist),]
ten_nearst <- head(viking_clip_sort, 10)
# Plot the results
plot(nb_buf$geometry, border = "blue")
plot(st_geometry(ten_nearst), col = "red", add = TRUE, pch = 19)
# Create the nobel object and transform to planar CRS
nobel <- st_centroid(nb_buf)
# Test whether the CRS match
st_crs(viking_clip) == st_crs(nobel)
# Compute the distance between the Nobelparken and the clipped viking monuments
viking_clip <- viking_clip %>%
mutate("nb_dist" = unclass(st_distance(viking_clip, nobel)))
#d <- st_distance(viking_clip, nobel)
# Take a quick look at the result
#head(d)
# Find the index of the 10 nearest viking monuments
#sorted <- sort(d) # sort monuments by proximd[ity
#nearest10index <- which ( ) # which distances are smaller than the 10th smallest distance
#nearest10index <- head(sorted,n=10)
# Identify the viking monuments that are the nearest, what kinds of monuments are they?
#viking_clip[1:10,]$anlaegsbet
#viking_clip %>%
#  filter(NAME_2%in%least$NAME_2)
viking_clip_sort <-viking_clip[order(viking_clip$nb_dist),]
ten_nearst <- head(viking_clip_sort, 10)
# Plot the results
plot(nb_buf$geometry, border = "blue")
plot(st_geometry(ten_nearst), col = "red", add = TRUE, pch = 19)
plot(st_geometry(ten_nearst), col = "red", pch = 19)
View(viking)
# /Start Code/ #
library(tmap)
remotes::install_github('r-tmap/tmap')
# /Start Code/ #
library(tmap)
unique(viking$anlaegsbet)
moent_fund <- monuments %>%
filter(anlaegsbet == "Møntfund")
View(moent_fund)
all.equal(st_crs(moent_fund), st_crs(municipalities_25832))
#all.equal(st_crs(moent_fund), st_crs(municipalities_25832))
# Join the viking monuments with the municipalities
moent_fund_df <- st_join(moent_fund, municipalities_25832)
View(moent_fund_df)
mun_moent_df <-moent_fund %>%
group_by(NAME_2) %>%
tally() %>%
arrange(desc(n))
mun_moent_df <-moent_fund_df %>%
group_by(NAME_2) %>%
tally() %>%
arrange(desc(n))
View(mun_moent_df)
#MAP!
tm_shape(municipalities_25832)
plot_mun <- st_as_sf(municipalities_25832) %>%
st_transform(crs = 25832)
#MAP!
tm_shape(municipalities_25832)
#MAP!
tm_shape(plot_mun)
View(plot_mun)
plot_mun
mun_moent_df
#MAP!
tm_shape(st_geometry(plot_mun))
plot(st_geometry(plot_mun))
View(mun_moent_df)
st_drop_geometry(mun_moent_df)
plot_mun <- st_join(moent_fund_df, st_drop_geometry(mun_moent_df))
plot_mun <- st_join(moent_fund_df, st_as_sf(st_drop_geometry(mun_moent_df)))
plot_mun <- st_join(moent_fund_df, mun_moent_df)
View(plot_mun)
View(municipalities_25832)
plot_mun <- st_join(municipalities_25832, mun_moent_df)
View(plot_mun)
plot(st_geometry(plot_mun))
plot(st_geometry(plot_mun), fill = n)
#MAP!
tm_shape(municipalities_25832)+
tm_polygons(st_geometry(municipalities_25832))
#MAP!
tm_shape(municipalities_25832)+
tm_polygons(municipalities_25832)
data("World")
tm_shape(World) +
tm_polygons("HPI")
View(World)
#MAP!
tm_shape(municipalities_25832)+
tm_polygons('n')
View(World)
#MAP!
tm_shape(plot_mun)+
tm_polygons('n')
#MAP!
tm_shape(plot_mun)+
tm_polygons('n', palette("-RdYlGn"))
#MAP!
tm_shape(plot_mun)+
tm_polygons('n', palette("-RdYlGn"))
#MAP!
tm_shape(plot_mun)+
tm_polygons('n', palette("OrRD"))
#MAP!
tm_shape(plot_mun)+
tm_polygons('n', palette("OrRd"))
#MAP!
tm_shape(plot_mun)+
tm_polygons('n')
#MAP!
tm_shape(plot_mun)+
tm_polygons('n', title = "Number of Moentfund")
View(mun_moent_df)
View(moent_fund_df)
#MAP2!
moent_aarhus <- moent_fund_df %>%
filter(NAME_2 == "Århus")
View(moent_aarhus)
st_bbox(moent_aarhus)
aarhus_box <- st_make_grid(aarhus_mun, n = 1)
tm_shape(plot_mun, bbox = aarhus_box)
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n', title = "Nmb")
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n', title = "Nmb")+
tm_dots(moent_aarhus)
moent_aarhus
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n', title = "Nmb")+
tm_dots(st_geometry(moent_aarhus))
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n', title = "Nmb")+
tm_dots(moent_aarhus)
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n', title = "Nmb")+
tm_shape(moent_aarhus)
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n', title = "Nmb")+
tm_shape(moent_aarhus)+
tm_dots()
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n', title = "Nmb")+
tm_shape(moent_aarhus)+
tm_dots(size = 3)
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n', title = "Nmb")+
tm_shape(moent_aarhus)+
tm_dots(size = 2)
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n', title = "Nmb")+
tm_shape(moent_aarhus)+
tm_dots(size = 1)
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n', title = "Nmb")+
tm_shape(moent_aarhus)+
tm_dots(size = 0.1)
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n', title = "Nmb")+
tm_shape(moent_aarhus)+
tm_dots(size = 0.5)
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n', title = "Nmb")+
tm_shape(moent_aarhus)+
tm_dots(size = 0.5, shape = 21)
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n', title = "Nmb")+
tm_shape(moent_aarhus)+
tm_dots(size = 0.3, shape = 21)
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons()+
tm_shape(moent_aarhus)+
tm_dots(size = 0.3, shape = 21)
tmap_mode("view")
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons()+
tm_shape(moent_aarhus)+
tm_dots(size = 0.3, shape = 21)
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons()+
tm_shape(moent_aarhus)+
tm_dots(size = 0.3, shape = 2)
tmap_mode("plot")
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons()+
tm_shape(moent_aarhus)+
tm_dots(size = 0.3, shape = 2)
#MAP!
m1<-tm_shape(plot_mun)+
tm_polygons('n', title = "Number of Moentfund")
m2<-tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons()+
tm_shape(moent_aarhus)+
tm_dots(size = 0.3, shape = 2)
tmap_arrange(m1, m2)
m2<-tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons(tm_polygons('n'))+
tm_shape(moent_aarhus)+
tm_dots(size = 0.3, shape = 2)
tmap_arrange(m1, m2)
m2<-tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n')+
tm_shape(moent_aarhus)+
tm_dots(size = 0.3, shape = 2)
tmap_arrange(m1, m2)
function (shp, name = NULL, is.master = NA, projection = NULL,
bbox = NULL, unit = NULL, simplify = 1, point.per = NA,
line.center = "midpoint", filter = NULL, raster.downsample = TRUE,
raster.warp = TRUE, ...)
#MAP!
m1<-tm_shape(plot_mun)+
tm_polygons('n', title = "Number of Moentfund")+
tm_layout(main.title = "Moentfund i DK", #Task 1
bg.color = "white",#Task 8
inner.margins = c(0, 0, 0, 0))
m2<-tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n')+
tm_shape(moent_aarhus)+
tm_dots(size = 0.3, shape = 2)+
tm_layout(main.title = "Moentfund i Aarhus Kommune", #Task 1
bg.color = "white",#Task 8
inner.margins = c(0, 0, 0, 0))
tmap_arrange(m1, m2)
#MAP!
m1<-tm_shape(plot_mun)+
tm_polygons('n', title = "Number of Moentfund")+
tm_layout(main.title = "Moentfund i DK", #Task 1
bg.color = "white",#Task 8
inner.margins = c(0, 0, 0, 0))
tmap_arrange(m1, m2)
nb_buf <- nb %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326) %>%
st_transform(crs = 25832) %>%
st_buffer(10000)
View(plot_mun)
moent_nb <- st_intersects(nb_buf, moent_aarhus)
View(moent_nb)
moent_nb <- st_intersection(nb_buf, moent_aarhus)
# Compute the distance between the Nobelparken and the clipped viking monuments
nobel <- st_centroid(nb_buf)
moent_nb <- moent_nb %>%
mutate("nb_dist" = unclass(st_distance(moent_nb, nobel)))
View(moent_nb)
moent_nb_sort <-moent_nb[order(moent_nb$nb_dist),]
View(moent_nb_sort)
moent_nb_sort <-moent_nb[order(moent_nb$nb_dist),] %>%
head(3)
View(moent_nb_sort)
View(nb_buf)
View(nobel)
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n')+
tm_shape(moent_aarhus)+
tm_dots(size = 0.3, shape = 2)+
tm_shape(moent_nb_sort)+
tm_dots(size = 0.3, shape = 2, color = "red")+
tm_shape(nobel)+
tm_dots(size = 1, shape = 3, color = "blue")
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n')+
tm_shape(moent_aarhus)+
tm_dots(size = 0.3, shape = 2)+
tm_shape(moent_nb_sort)+
tm_dots(size = 0.3, shape = 2, color = "red")+
tm_shape(nobel)+
tm_dots(size = 1, shape = 3, color = "blue")+
tm_layout(main.title = "Moentfund i Aarhus Kommune", #Task 1
bg.color = "white",#Task 8
inner.margins = c(0, 0, 0, 0))
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n')+
tm_shape(moent_aarhus)+
tm_dots(size = 0.3, shape = 2)+
tm_shape(moent_nb_sort)+
tm_dots(size = 0.5, shape = 1, color = "red")+
tm_shape(nobel)+
tm_dots(size = 1, shape = 3, color = "blue")+
tm_layout(main.title = "Moentfund i Aarhus Kommune", #Task 1
bg.color = "white",#Task 8
inner.margins = c(0, 0, 0, 0))
moent_nb <- moent_nb[!(moent_nb$stednavn %in% moent_nb_sort$stednavn),]
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n')+
tm_shape(moent_aarhus)+
tm_dots(size = 0.3, shape = 2)+
tm_shape(moent_nb_sort)+
tm_dots(size = 0.5, shape = 1, color = "red")+
tm_shape(nobel)+
tm_dots(size = 1, shape = 3, color = "blue")+
tm_layout(main.title = "Moentfund i Aarhus Kommune", #Task 1
bg.color = "white",#Task 8
inner.margins = c(0, 0, 0, 0))
View(moent_nb)
moent_nb <- moent_aarhus[!(moent_aarhus$stednavn %in% moent_nb_sort$stednavn),]
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n')+
tm_shape(moent_nb)+
tm_dots(size = 0.3, shape = 2)+
tm_shape(moent_nb_sort)+
tm_dots(size = 0.5, shape = 1, color = "red")+
tm_shape(nobel)+
tm_dots(size = 1, shape = 3, color = "blue")+
tm_layout(main.title = "Moentfund i Aarhus Kommune", #Task 1
bg.color = "white",#Task 8
inner.margins = c(0, 0, 0, 0))
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n')+
tm_shape(moent_nb)+
tm_dots(size = 0.5, shape = 1)+
tm_shape(moent_nb_sort)+
tm_dots(size = 0.5, shape = 1, color = "red")+
tm_shape(nobel)+
tm_dots(size = 0.5, shape = 1, color = "blue")+
tm_layout(main.title = "Moentfund i Aarhus Kommune", #Task 1
bg.color = "white",#Task 8
inner.margins = c(0, 0, 0, 0))
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n')+
tm_shape(moent_nb)+
tm_dots(size = 0.5, shape = 1)
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n')+
tm_shape(moent_nb)+
tm_dots(size = 0.5, shape = 1)+
tm_shape(moent_nb_sort)+
tm_dots(size = 0.5, shape = 1, color = "red")
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n')+
tm_shape(moent_nb)+
tm_dots(size = 0.5, shape = 1)+
tm_shape(nobel)+
tm_dots(size = 0.5, shape = 1, color = "blue")
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n')+
tm_shape(moent_nb)+
tm_dots(size = 0.5, shape = 1)+
tm_shape(nobel)+
tm_dots(size = 0.5, shape = 1, color = "blue")
moent_aarhus%in%moent_nb_sort
View(moent_nb_sort)
View(moent_aarhus)
moent_aarhus$stednavn%in%moent_nb_sort$stednavn
cat_moent_nb <- moent_aarhus %>%
mutate(colcode = case_when(moent_aarhus$stednavn%in%moent_nb_sort$stednavn ~ 'red'))
View(cat_moent_nb)
cat_moent_nb <- moent_aarhus %>%
mutate(colcode = case_when(moent_aarhus$stednavn%in%moent_nb_sort$stednavn ~ 'red',)) %>%
rbind(nobel)
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n')+
tm_shape(cat_moent_nb)+
tm_dots(size = 0.5, shape = 1, col = colcode)+
tm_layout(main.title = "Moentfund i Aarhus Kommune", #Task 1
bg.color = "white",#Task 8
inner.margins = c(0, 0, 0, 0))
View(cat_moent_nb)
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n')+
tm_shape(cat_moent_nb)+
tm_dots(size = 0.5, shape = 1, col = 'colcode')+
tm_layout(main.title = "Moentfund i Aarhus Kommune", #Task 1
bg.color = "white",#Task 8
inner.margins = c(0, 0, 0, 0))
cat_moent_nb <- moent_aarhus %>%
mutate(colcode = if(moent_aarhus$stednavn%in%moent_nb_sort$stednavn) {'red'}
else {'white'})
cat_moent_nb <- moent_aarhus %>%
mutate(if(moent_aarhus$stednavn%in%moent_nb_sort$stednavn) {colcode = 'red'}
else {colcode = 'white'})
cat_moent_nb <- moent_aarhus %>%
mutate(colcode = case_when(moent_aarhus$stednavn%in%moent_nb_sort$stednavn ~ 'red',
[!(moent_aarhus$stednavn%in%moent_nb_sort$stednavn)] ~ 'white'))
cat_moent_nb <- moent_aarhus %>%
mutate(colcode = case_when(moent_aarhus$stednavn%in%moent_nb_sort$stednavn ~ 'red',
!moent_aarhus$stednavn%in%moent_nb_sort$stednavn ~ 'white'))
View(cat_moent_nb)
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n')+
tm_shape(cat_moent_nb)+
tm_dots(size = 0.5, shape = 1, col = 'colcode')+
tm_layout(main.title = "Moentfund i Aarhus Kommune", #Task 1
bg.color = "white",#Task 8
inner.margins = c(0, 0, 0, 0))
cat_moent_nb <- moent_aarhus %>%
mutate(colcode = case_when(moent_aarhus$stednavn%in%moent_nb_sort$stednavn ~ 'red',
!moent_aarhus$stednavn%in%moent_nb_sort$stednavn ~ 'green'))
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n')+
tm_shape(cat_moent_nb)+
tm_dots(size = 0.5, shape = 1, col = 'colcode')+
tm_layout(main.title = "Moentfund i Aarhus Kommune", #Task 1
bg.color = "white",#Task 8
inner.margins = c(0, 0, 0, 0))
View(cat_moent_nb)
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n')+
tm_shape(cat_moent_nb)+
tm_dots(size = 0.5, shape = 1, col = 'colcode')+
tm_shape(nobel)+
tm_dots()+
tm_layout(main.title = "Moentfund i Aarhus Kommune", #Task 1
bg.color = "white",#Task 8
inner.margins = c(0, 0, 0, 0))
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n')+
tm_shape(cat_moent_nb)+
tm_dots(size = 0.5, shape = 1, col = 'colcode')+
tm_shape(nobel)+
tm_dots(col = "blue")+
tm_layout(main.title = "Moentfund i Aarhus Kommune", #Task 1
bg.color = "white",#Task 8
inner.margins = c(0, 0, 0, 0))
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n')+
tm_shape(cat_moent_nb)+
tm_dots(size = 0.5, shape = 1, col = 'colcode')+
tm_shape(nobel)+
tm_dots(size = 0.3, col = "blue")+
tm_layout(main.title = "Moentfund i Aarhus Kommune", #Task 1
bg.color = "white",#Task 8
inner.margins = c(0, 0, 0, 0))
tmap_arrange(m1, m2)
tm_shape(plot_mun, bbox = aarhus_box)+
tm_polygons('n')+
tm_shape(cat_moent_nb)+
tm_dots(size = 0.5, shape = 1, col = 'colcode')+
tm_shape(nobel)+
tm_dots(size = 0.3, col = "blue")+
tm_layout(main.title = "Moentfund i Aarhus Kommune", #Task 1
bg.color = "white",#Task 8
inner.margins = c(0, 0, 0, 0))
